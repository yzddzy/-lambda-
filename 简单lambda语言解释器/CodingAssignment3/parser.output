Grammar

    0 $accept: NT_WHOLE $end

    1 NT_WHOLE: NT_EXPR4

    2 NT_EXPR: TM_NAT
    3        | TM_LEFT_PAREN NT_EXPR4 TM_RIGHT_PAREN
    4        | TM_IDENT

    5 NT_EXPR2: NT_EXPR
    6         | NT_EXPR2 NT_EXPR

    7 NT_EXPR3: NT_EXPR2
    8         | NT_EXPR3 TM_PLUS NT_EXPR3
    9         | NT_EXPR3 TM_MINUS NT_EXPR3
   10         | NT_EXPR3 TM_MUL NT_EXPR3
   11         | NT_EXPR3 TM_DIV NT_EXPR3
   12         | NT_EXPR3 TM_MOD NT_EXPR3

   13 NT_EXPR4: NT_EXPR3
   14         | TM_LAMBDA TM_IDENT TM_COL NT_EXPR4


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TM_NAT <n> (258) 2
    TM_IDENT <i> (259) 4 14
    TM_LEFT_PAREN <none> (260) 3
    TM_RIGHT_PAREN <none> (261) 3
    TM_COL <none> (262) 14
    TM_LAMBDA <none> (263) 14
    TM_PLUS <none> (264) 8
    TM_MINUS <none> (265) 9
    TM_MUL <none> (266) 10
    TM_DIV <none> (267) 11
    TM_MOD <none> (268) 12


Nonterminals, with rules where they appear

    $accept (14)
        on left: 0
    NT_WHOLE <e> (15)
        on left: 1
        on right: 0
    NT_EXPR <e> (16)
        on left: 2 3 4
        on right: 5 6
    NT_EXPR2 <e> (17)
        on left: 5 6
        on right: 6 7
    NT_EXPR3 <e> (18)
        on left: 7 8 9 10 11 12
        on right: 8 9 10 11 12 13
    NT_EXPR4 <e> (19)
        on left: 13 14
        on right: 1 3 14


State 0

    0 $accept: . NT_WHOLE $end

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3
    TM_LAMBDA      shift, and go to state 4

    NT_WHOLE  go to state 5
    NT_EXPR   go to state 6
    NT_EXPR2  go to state 7
    NT_EXPR3  go to state 8
    NT_EXPR4  go to state 9


State 1

    2 NT_EXPR: TM_NAT .

    $default  reduce using rule 2 (NT_EXPR)


State 2

    4 NT_EXPR: TM_IDENT .

    $default  reduce using rule 4 (NT_EXPR)


State 3

    3 NT_EXPR: TM_LEFT_PAREN . NT_EXPR4 TM_RIGHT_PAREN

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3
    TM_LAMBDA      shift, and go to state 4

    NT_EXPR   go to state 6
    NT_EXPR2  go to state 7
    NT_EXPR3  go to state 8
    NT_EXPR4  go to state 10


State 4

   14 NT_EXPR4: TM_LAMBDA . TM_IDENT TM_COL NT_EXPR4

    TM_IDENT  shift, and go to state 11


State 5

    0 $accept: NT_WHOLE . $end

    $end  shift, and go to state 12


State 6

    5 NT_EXPR2: NT_EXPR .

    $default  reduce using rule 5 (NT_EXPR2)


State 7

    6 NT_EXPR2: NT_EXPR2 . NT_EXPR
    7 NT_EXPR3: NT_EXPR2 .

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3

    $default  reduce using rule 7 (NT_EXPR3)

    NT_EXPR  go to state 13


State 8

    8 NT_EXPR3: NT_EXPR3 . TM_PLUS NT_EXPR3
    9         | NT_EXPR3 . TM_MINUS NT_EXPR3
   10         | NT_EXPR3 . TM_MUL NT_EXPR3
   11         | NT_EXPR3 . TM_DIV NT_EXPR3
   12         | NT_EXPR3 . TM_MOD NT_EXPR3
   13 NT_EXPR4: NT_EXPR3 .

    TM_PLUS   shift, and go to state 14
    TM_MINUS  shift, and go to state 15
    TM_MUL    shift, and go to state 16
    TM_DIV    shift, and go to state 17
    TM_MOD    shift, and go to state 18

    $default  reduce using rule 13 (NT_EXPR4)


State 9

    1 NT_WHOLE: NT_EXPR4 .

    $default  reduce using rule 1 (NT_WHOLE)


State 10

    3 NT_EXPR: TM_LEFT_PAREN NT_EXPR4 . TM_RIGHT_PAREN

    TM_RIGHT_PAREN  shift, and go to state 19


State 11

   14 NT_EXPR4: TM_LAMBDA TM_IDENT . TM_COL NT_EXPR4

    TM_COL  shift, and go to state 20


State 12

    0 $accept: NT_WHOLE $end .

    $default  accept


State 13

    6 NT_EXPR2: NT_EXPR2 NT_EXPR .

    $default  reduce using rule 6 (NT_EXPR2)


State 14

    8 NT_EXPR3: NT_EXPR3 TM_PLUS . NT_EXPR3

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3

    NT_EXPR   go to state 6
    NT_EXPR2  go to state 7
    NT_EXPR3  go to state 21


State 15

    9 NT_EXPR3: NT_EXPR3 TM_MINUS . NT_EXPR3

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3

    NT_EXPR   go to state 6
    NT_EXPR2  go to state 7
    NT_EXPR3  go to state 22


State 16

   10 NT_EXPR3: NT_EXPR3 TM_MUL . NT_EXPR3

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3

    NT_EXPR   go to state 6
    NT_EXPR2  go to state 7
    NT_EXPR3  go to state 23


State 17

   11 NT_EXPR3: NT_EXPR3 TM_DIV . NT_EXPR3

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3

    NT_EXPR   go to state 6
    NT_EXPR2  go to state 7
    NT_EXPR3  go to state 24


State 18

   12 NT_EXPR3: NT_EXPR3 TM_MOD . NT_EXPR3

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3

    NT_EXPR   go to state 6
    NT_EXPR2  go to state 7
    NT_EXPR3  go to state 25


State 19

    3 NT_EXPR: TM_LEFT_PAREN NT_EXPR4 TM_RIGHT_PAREN .

    $default  reduce using rule 3 (NT_EXPR)


State 20

   14 NT_EXPR4: TM_LAMBDA TM_IDENT TM_COL . NT_EXPR4

    TM_NAT         shift, and go to state 1
    TM_IDENT       shift, and go to state 2
    TM_LEFT_PAREN  shift, and go to state 3
    TM_LAMBDA      shift, and go to state 4

    NT_EXPR   go to state 6
    NT_EXPR2  go to state 7
    NT_EXPR3  go to state 8
    NT_EXPR4  go to state 26


State 21

    8 NT_EXPR3: NT_EXPR3 . TM_PLUS NT_EXPR3
    8         | NT_EXPR3 TM_PLUS NT_EXPR3 .
    9         | NT_EXPR3 . TM_MINUS NT_EXPR3
   10         | NT_EXPR3 . TM_MUL NT_EXPR3
   11         | NT_EXPR3 . TM_DIV NT_EXPR3
   12         | NT_EXPR3 . TM_MOD NT_EXPR3

    TM_MUL  shift, and go to state 16
    TM_DIV  shift, and go to state 17
    TM_MOD  shift, and go to state 18

    $default  reduce using rule 8 (NT_EXPR3)


State 22

    8 NT_EXPR3: NT_EXPR3 . TM_PLUS NT_EXPR3
    9         | NT_EXPR3 . TM_MINUS NT_EXPR3
    9         | NT_EXPR3 TM_MINUS NT_EXPR3 .
   10         | NT_EXPR3 . TM_MUL NT_EXPR3
   11         | NT_EXPR3 . TM_DIV NT_EXPR3
   12         | NT_EXPR3 . TM_MOD NT_EXPR3

    TM_MUL  shift, and go to state 16
    TM_DIV  shift, and go to state 17
    TM_MOD  shift, and go to state 18

    $default  reduce using rule 9 (NT_EXPR3)


State 23

    8 NT_EXPR3: NT_EXPR3 . TM_PLUS NT_EXPR3
    9         | NT_EXPR3 . TM_MINUS NT_EXPR3
   10         | NT_EXPR3 . TM_MUL NT_EXPR3
   10         | NT_EXPR3 TM_MUL NT_EXPR3 .
   11         | NT_EXPR3 . TM_DIV NT_EXPR3
   12         | NT_EXPR3 . TM_MOD NT_EXPR3

    $default  reduce using rule 10 (NT_EXPR3)


State 24

    8 NT_EXPR3: NT_EXPR3 . TM_PLUS NT_EXPR3
    9         | NT_EXPR3 . TM_MINUS NT_EXPR3
   10         | NT_EXPR3 . TM_MUL NT_EXPR3
   11         | NT_EXPR3 . TM_DIV NT_EXPR3
   11         | NT_EXPR3 TM_DIV NT_EXPR3 .
   12         | NT_EXPR3 . TM_MOD NT_EXPR3

    $default  reduce using rule 11 (NT_EXPR3)


State 25

    8 NT_EXPR3: NT_EXPR3 . TM_PLUS NT_EXPR3
    9         | NT_EXPR3 . TM_MINUS NT_EXPR3
   10         | NT_EXPR3 . TM_MUL NT_EXPR3
   11         | NT_EXPR3 . TM_DIV NT_EXPR3
   12         | NT_EXPR3 . TM_MOD NT_EXPR3
   12         | NT_EXPR3 TM_MOD NT_EXPR3 .

    $default  reduce using rule 12 (NT_EXPR3)


State 26

   14 NT_EXPR4: TM_LAMBDA TM_IDENT TM_COL NT_EXPR4 .

    $default  reduce using rule 14 (NT_EXPR4)
